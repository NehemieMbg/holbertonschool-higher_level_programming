Text file to be tested with doctest and Module 7 - Integer validator
====================================================================
Import the method:
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


========== Success cases ==========
	# Test with "age", 1
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", 1)

	# Test with "age", True
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", True)

========== Failure cases ==========
	# Test with "age"
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	# Test the area method
	>>> bg = BaseGeometry()
	>>> print(bg.area())
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

	# Test with "age", 0
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0

	# Test with "age", -4
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", -4)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0

	# Test with "age", "4"
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", "4")
	Traceback (most recent call last):
	...
	TypeError: age must be an integer

	# Test with "age", (4,)
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", (4,))
	Traceback (most recent call last):
	...
	TypeError: age must be an integer

	# Test with "age", [3]
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", [3])
	Traceback (most recent call last):
	...
	TypeError: age must be an integer

	# Test with "age", None
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", None)
	Traceback (most recent call last):
	...
	TypeError: age must be an integer

	# Test with "age", {3,4}
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", {3, 4})
	Traceback (most recent call last):
	...
	TypeError: age must be an integer
